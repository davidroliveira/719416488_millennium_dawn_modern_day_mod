#Written by Rabbit and SWF541
#Optimized and Reworked by Angriest Bird
#for not over sizing the array for having both 2000 and 2017 values
###COMPENDIUM
#Tag Specific are near the bottom of the generic functions. Relevant information
#Debugging scripts for this ignore
effect_add_generic = {
	add_ideas = generic_bureaucratic_drain_idea
}
effect_sample = {
	CHI = {
		GER = {
			country_event = { id = influence.0 }
		}
	}
}
init_influence = {
	clear_array = influence_array_val
	clear_array = influence_array_calc
	clear_array = influence_array
}

startup_influence = {
	sort_influence = yes #the rest is on_startup
}

recalculate_influence = {
	hidden_effect = {
		sort_influence = yes
		calculate_influence_percentage = yes
		delete_influencer_check = yes
		sort_influence = yes
	}
}

sort_influence = {
	#Creates the Sample Array
	resize_temp_array = { array = influence_array_val_temp size = influence_array_val^num } #values
	resize_temp_array = {
		array = influence_array_temp #tags
		size = influence_array_val^num
	}
	for_loop_effect = {
		end = influence_array_val^num
		value = v
		find_highest_in_array = {
			array = influence_array_val
			value = max
			index = max_index
		}
		set_temp_variable = { influence_array_val_temp^v = max } #sets biggest at the earliest available position
		set_temp_variable = { influence_array_temp^v = influence_array^max_index } #sets biggest TAG at the earliest available position
		set_variable = { influence_array_val^max_index = -1 } #removes it from selection
	}
	clear_array = influence_array_val
	clear_array = influence_array_calc
	clear_array = influence_array
	set_variable = { influence_total = 0 }
	#restores destroyed arrays in the above process - i.e. if they were deleted due to being less then 1%
	for_each_loop = {
		array = influence_array_val_temp
		add_to_array = { influence_array_val = v  }
		add_to_array = { influence_array_calc = v }
		add_to_variable = { influence_total = v }
	}
	for_each_loop = {
		array = influence_array_temp
		add_to_array = { influence_array = v  }
	}
	clear_temp_array = influence_array_val_temp
	clear_temp_array = influence_array_temp
	set_variable = { domestic_influence_amount_calc = domestic_influence_amount }
	add_to_variable = { influence_total = domestic_influence_amount_calc }

	for_each_loop = {
		array = influence_array_calc
		round_variable = influence_array_calc^i
		divide_variable = { influence_array_calc^i = influence_total }
		clamp_variable = { var = influence_array_calc^i min = 0 max = 1 }
		clamp_variable = { var = influence_array_val^i min = 0 max = influence_total }
	}

	round_variable = domestic_influence_amount_calc
	divide_variable = { domestic_influence_amount_calc = influence_total }
	clamp_variable = { var = domestic_influence_amount_calc min = 0 max = 1 }
	clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
}

calculate_influence_percentage = {
	set_temp_variable = { influence_democratic = 0 }
	set_temp_variable = { influence_neutrality = 0 }
	set_temp_variable = { influence_communism = 0 }
	set_temp_variable = { influence_nationalist = 0 }
	set_temp_variable = { influence_fascism = 0 }

	for_loop_effect = {
		end = influence_array_calc^num
		if = {
			limit = { var:influence_array^v = { has_government = democratic } }
			add_to_temp_variable = { influence_democratic = influence_array_calc^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = neutrality } }
			add_to_temp_variable = { influence_neutrality = influence_array_calc^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = communism } }
			add_to_temp_variable = { influence_communism = influence_array_calc^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = nationalist } }
			add_to_temp_variable = { influence_nationalist = influence_array_calc^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = fascism } }
			add_to_temp_variable = { influence_fascism = influence_array_calc^v }
		}
	}

	## see ideology_drifts.txt: ###
	clear_influence_count_ideas = yes

	if = { limit = { check_variable = { influence_democratic > 0.04 } } reset_democratic_influence_ideas = yes }
	if = { limit = { check_variable = { influence_neutrality > 0.04 } } reset_neutrality_influence_ideas = yes }
	if = { limit = { check_variable = { influence_communism > 0.04 } } reset_communism_influence_ideas = yes }
	if = { limit = { check_variable = { influence_nationalist > 0.04 } } reset_nationalist_influence_ideas = yes }
	if = { limit = { check_variable = { influence_fascism > 0.04 } } reset_fascism_influence_ideas = yes }
}

### Actions ###

spread_influence = {
	PREV = { add_political_power = -80 }

	set_temp_variable = { influence_gain = influence_total } #1000
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #from global rank idea 20 * 1.6 = 32
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 5 } #base gain - DEBUG TOOL - temped to prevent 0 addition
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PREV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes
}

make_puppet_action = {
	#eventually remove explotation idea (shouldn't double up)
	for_loop_effect = {
		end = influence_array^num
		value = v

		meta_effect = {
			text = {
				remove_ideas = [THISTAG]_tribute_idea
			}
			THISTAG = "[?var:influence_array^v.GetTag]"
		}
	}

	PREV = {
		set_autonomy = {
			target = PREV
			autonomy_state = autonomy_satellite_state
			freedom_level = 0.5
		}
		add_named_threat = { threat = 2 name = created_puppet_loc }
	}
	every_neighbor_country = {
		add_opinion_modifier = { target = PREV modifier = puppeted_neighbor }
	}
}

economic_exploitation_action = {
	meta_effect = {
		text = {
			add_ideas = [ROOTTAG]_tribute_idea
		}
		ROOTTAG = "[?var:influence_array^0.GetTag]"
	}

	#Remove 10% influence
	set_temp_variable = { influence_reduce = influence_total } #from global rank idea
	multiply_temp_variable = { influence_reduce = 0.1 } #10%
	round_temp_variable = influence_reduce
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			subtract_from_variable = { influence_array_val^v = influence_reduce }
		}
	}
	recalculate_influence = yes

	#Opinion Modifiers
	add_opinion_modifier = { target = PREV modifier = exploited_us }
	every_neighbor_country = {
		add_opinion_modifier = { target = PREV modifier = exploited_neighbor }
	}
}


manipulate_politics_action = {
	#Add +5 to our outlook
	if = {
		limit = {
			PREV = { has_government = fascism }
		}
		add_popularity = { ideology = fascism popularity = 0.05 }
	}
	if = {
		limit = {
			PREV = { has_government = neutrality }
		}
		add_popularity = { ideology = neutrality popularity = 0.05 }
	}
	if = {
		limit = {
			PREV = { has_government = communism }
		}
		add_popularity = { ideology = communism popularity = 0.05 }
	}
	if = {
		limit = {
			PREV = { has_government = nationalist }
		}
		add_popularity = { ideology = nationalist popularity = 0.05 }
	}
	if = {
		limit = {
			PREV = { has_government = democratic }
		}
		add_popularity = { ideology = democratic popularity = 0.05 }
	}

	#add +5 to our party
	for_each_loop = {
		array = PREV.ruling_party
		value = v
		add_to_variable = { party_pop_array^v = 0.05 }
	}

	#remove 10% influence
	set_temp_variable = { influence_reduce = influence_total } #from global rank idea
	multiply_temp_variable = { influence_reduce = 0.1 } #10%
	round_temp_variable = influence_reduce
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			subtract_from_variable = { influence_array_val^v = influence_reduce }
		}
	}
	recalculate_influence = yes

	#reduce relations if different gov
	if = {
		limit = {
			NOT = { is_same_government_PREV = yes }
		}
		add_opinion_modifier = {
				target = PREV
				modifier = supported_opposition
		}
	}
}

delete_influencer_check = {
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^0 < 0.01 }
				check_variable = { influence_array_val^0 < 0 }
			}
			check_variable = { influence_array^0 > 0 } #Index 1 - Biggest Influencer
		}
		remove_from_array = { array = influence_array index = 0 }
		remove_from_array = { array = influence_array_val index = 0 }
		remove_from_array = { array = influence_array_calc index = 0 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^1 < 0.01 }
				check_variable = { influence_array_val^1 < 0 }
			}
			check_variable = { influence_array^1 > 0 } #Index 2 - Second Largest Influencer
		}
		remove_from_array = { array = influence_array index = 1 }
		remove_from_array = { array = influence_array_val index = 1 }
		remove_from_array = { array = influence_array_calc index = 1 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^2 < 0.01 }
				check_variable = { influence_array_val^2 < 0 }
			}
			check_variable = { influence_array^2 > 0 } #Index 3 - Third Largest Influencer
		}
		remove_from_array = { array = influence_array index = 2 }
		remove_from_array = { array = influence_array_val index = 2 }
		remove_from_array = { array = influence_array_calc index = 2 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^3 < 0.01 }
				check_variable = { influence_array_val^3 < 0 }
			}
			check_variable = { influence_array^3 > 0 } #Index 4 - Fourth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 3 }
		remove_from_array = { array = influence_array_val index = 3 }
		remove_from_array = { array = influence_array_calc index = 3 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^4 < 0.01 }
				check_variable = { influence_array_val^4 < 0 }
			}
			check_variable = { influence_array^4 > 0 } #Index 5 - Fifth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 4 }
		remove_from_array = { array = influence_array_val index = 4 }
		remove_from_array = { array = influence_array_calc index = 4 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^5 < 0.01 }
				check_variable = { influence_array_val^5 < 0 }
			}
			check_variable = { influence_array^5 > 0 } #Index 6 - Sixth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 5 }
		remove_from_array = { array = influence_array_val index = 5 }
		remove_from_array = { array = influence_array_calc index = 5 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { influence_array_calc^6 < 0.01 }
				check_variable = { influence_array_val^6 < 0 }
			}
			check_variable = { influence_array^6 > 0 } #Index 6 - Sixth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 6 }
		remove_from_array = { array = influence_array_val index = 6 }
		remove_from_array = { array = influence_array_calc index = 6 }
	}

	##Delete Double Influnecers
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^1 > 0 }
					check_variable = { influence_array^0 = influence_array^1 }
				}
				AND = {
					check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^2 > 0 }
					check_variable = { influence_array^0 = influence_array^2 }
				}
				AND = {
					check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^3 > 0 }
					check_variable = { influence_array^0 = influence_array^3 }
				}
				AND = {
					check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^4 > 0 }
					check_variable = { influence_array^0 = influence_array^4 }
				}
				AND = {
					check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^5 > 0 }
					check_variable = { influence_array^0 = influence_array^5 }
				}
				AND = {
					check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^6 > 0 }
					check_variable = { influence_array^0 = influence_array^6 }
				}
			}
		}
		log = "[GetDateText]: [This.GetName]: Double Influencer is Present. Error Code: 10000"
		if = {
			limit = {
				check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^1 > 0 }
				check_variable = { influence_array^0 = influence_array^1 }
			}
			add_to_variable = { influence_array_val^0 = influence_array_val^1 }
			remove_from_array = { array = influence_array index = 1 }
			remove_from_array = { array = influence_array_val index = 1 }
			remove_from_array = { array = influence_array_calc index = 1 }
		}
		if = {
			limit = {
				check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^2 > 0 }
				check_variable = { influence_array^0 = influence_array^2 }
			}
			add_to_variable = { influence_array_val^0 = influence_array_val^2 }
			remove_from_array = { array = influence_array index = 2 }
			remove_from_array = { array = influence_array_val index = 2 }
			remove_from_array = { array = influence_array_calc index = 2 }
		}
		if = {
			limit = {
				check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^3 > 0 }
				check_variable = { influence_array^0 = influence_array^3 }
			}
			add_to_variable = { influence_array_val^0 = influence_array_val^3 }
			remove_from_array = { array = influence_array index = 3 }
			remove_from_array = { array = influence_array_val index = 3 }
			remove_from_array = { array = influence_array_calc index = 3 }
		}
		if = {
			limit = {
				check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^4 > 0 }
				check_variable = { influence_array^0 = influence_array^4 }
			}
			add_to_variable = { influence_array_val^0 = influence_array_val^4 }
			remove_from_array = { array = influence_array index = 4 }
			remove_from_array = { array = influence_array_val index = 4 }
			remove_from_array = { array = influence_array_calc index = 4 }
		}
		if = {
			limit = {
				check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^5 > 0 }
				check_variable = { influence_array^0 = influence_array^5 }
			}
			add_to_variable = { influence_array_val^0 = influence_array_val^5 }
			remove_from_array = { array = influence_array index = 5 }
			remove_from_array = { array = influence_array_val index = 5 }
			remove_from_array = { array = influence_array_calc index = 5 }
		}
		if = {
			limit = {
				check_variable = { influence_array^0 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^6 > 0 }
				check_variable = { influence_array^0 = influence_array^6 }
			}
			add_to_variable = { influence_array_val^0 = influence_array_val^6 }
			remove_from_array = { array = influence_array index = 6 }
			remove_from_array = { array = influence_array_val index = 6 }
			remove_from_array = { array = influence_array_calc index = 6 }
		}
	}
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^2 > 0 }
					check_variable = { influence_array^1 = influence_array^2 }
				}
				AND = {
					check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^3 > 0 }
					check_variable = { influence_array^1 = influence_array^3 }
				}
				AND = {
					check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^4 > 0 }
					check_variable = { influence_array^1 = influence_array^4 }
				}
				AND = {
					check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^5 > 0 }
					check_variable = { influence_array^1 = influence_array^5 }
				}
				AND = {
					check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^6 > 0 }
					check_variable = { influence_array^1 = influence_array^6 }
				}
			}
		}
		log = "[GetDateText]: [This.GetName]: Double Influencer is Present. Error Code: 10000"
		if = {
			limit = {
				check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^2 > 0 }
				check_variable = { influence_array^1 = influence_array^2 }
			}
			add_to_variable = { influence_array_val^1 = influence_array_val^2 }
			remove_from_array = { array = influence_array index = 2 }
			remove_from_array = { array = influence_array_val index = 2 }
			remove_from_array = { array = influence_array_calc index = 2 }
		}
		if = {
			limit = {
				check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^3 > 0 }
				check_variable = { influence_array^1 = influence_array^3 }
			}
			add_to_variable = { influence_array_val^1 = influence_array_val^3 }
			remove_from_array = { array = influence_array index = 3 }
			remove_from_array = { array = influence_array_val index = 3 }
			remove_from_array = { array = influence_array_calc index = 3 }
		}
		if = {
			limit = {
				check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^4 > 0 }
				check_variable = { influence_array^1 = influence_array^4 }
			}
			add_to_variable = { influence_array_val^1 = influence_array_val^4 }
			remove_from_array = { array = influence_array index = 4 }
			remove_from_array = { array = influence_array_val index = 4 }
			remove_from_array = { array = influence_array_calc index = 4 }
		}
		if = {
			limit = {
				check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^5 > 0 }
				check_variable = { influence_array^1 = influence_array^5 }
			}
			add_to_variable = { influence_array_val^1 = influence_array_val^5 }
			remove_from_array = { array = influence_array index = 5 }
			remove_from_array = { array = influence_array_val index = 5 }
			remove_from_array = { array = influence_array_calc index = 5 }
		}
		if = {
			limit = {
				check_variable = { influence_array^1 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^6 > 0 }
				check_variable = { influence_array^1 = influence_array^6 }
			}
			add_to_variable = { influence_array_val^1 = influence_array_val^6 }
			remove_from_array = { array = influence_array index = 6 }
			remove_from_array = { array = influence_array_val index = 6 }
			remove_from_array = { array = influence_array_calc index = 6 }
		}
	}
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^3 > 0 }
					check_variable = { influence_array^2 = influence_array^3 }
				}
				AND = {
					check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^4 > 0 }
					check_variable = { influence_array^2 = influence_array^4 }
				}
				AND = {
					check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^5 > 0 }
					check_variable = { influence_array^2 = influence_array^5 }
				}
				AND = {
					check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^6 > 0 }
					check_variable = { influence_array^2 = influence_array^6 }
				}
			}
		}
		log = "[GetDateText]: [This.GetName]: Double Influencer is Present. Error Code: 10000"
		if = {
			limit = {
				check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^3 > 0 }
				check_variable = { influence_array^2 = influence_array^3 }
			}
			add_to_variable = { influence_array_val^2 = influence_array_val^3 }
			remove_from_array = { array = influence_array index = 3 }
			remove_from_array = { array = influence_array_val index = 3 }
			remove_from_array = { array = influence_array_calc index = 3 }
		}
		if = {
			limit = {
				check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^4 > 0 }
				check_variable = { influence_array^2 = influence_array^4 }
			}
			add_to_variable = { influence_array_val^2 = influence_array_val^4 }
			remove_from_array = { array = influence_array index = 4 }
			remove_from_array = { array = influence_array_val index = 4 }
			remove_from_array = { array = influence_array_calc index = 4 }
		}
		if = {
			limit = {
				check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^5 > 0 }
				check_variable = { influence_array^2 = influence_array^5 }
			}
			add_to_variable = { influence_array_val^2 = influence_array_val^5 }
			remove_from_array = { array = influence_array index = 5 }
			remove_from_array = { array = influence_array_val index = 5 }
			remove_from_array = { array = influence_array_calc index = 5 }
		}
		if = {
			limit = {
				check_variable = { influence_array^2 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^6 > 0 }
				check_variable = { influence_array^2 = influence_array^6 }
			}
			add_to_variable = { influence_array_val^2 = influence_array_val^6 }
			remove_from_array = { array = influence_array index = 6 }
			remove_from_array = { array = influence_array_val index = 6 }
			remove_from_array = { array = influence_array_calc index = 6 }
		}
	}
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = { influence_array^3 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^4 > 0 }
					check_variable = { influence_array^3 = influence_array^4 }
				}
				AND = {
					check_variable = { influence_array^3 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^5 > 0 }
					check_variable = { influence_array^3 = influence_array^5 }
				}
				AND = {
					check_variable = { influence_array^3 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^6 > 0 }
					check_variable = { influence_array^3 = influence_array^6 }
				}
			}
		}
		log = "[GetDateText]: [This.GetName]: Double Influencer is Present. Error Code: 10000"
		if = {
			limit = {
				check_variable = { influence_array^3 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^4 > 0 }
				check_variable = { influence_array^3 = influence_array^4 }
			}
			add_to_variable = { influence_array_val^3 = influence_array_val^4 }
			remove_from_array = { array = influence_array index = 4 }
			remove_from_array = { array = influence_array_val index = 4 }
			remove_from_array = { array = influence_array_calc index = 4 }
		}
		if = {
			limit = {
				check_variable = { influence_array^3 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^5 > 0 }
				check_variable = { influence_array^3 = influence_array^5 }
			}
			add_to_variable = { influence_array_val^3 = influence_array_val^5 }
			remove_from_array = { array = influence_array index = 5 }
			remove_from_array = { array = influence_array_val index = 5 }
			remove_from_array = { array = influence_array_calc index = 5 }
		}
		if = {
			limit = {
				check_variable = { influence_array^3 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^6 > 0 }
				check_variable = { influence_array^3 = influence_array^6 }
			}
			add_to_variable = { influence_array_val^3 = influence_array_val^6 }
			remove_from_array = { array = influence_array index = 6 }
			remove_from_array = { array = influence_array_val index = 6 }
			remove_from_array = { array = influence_array_calc index = 6 }
		}
	}
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = { influence_array^4 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^5 > 0 }
					check_variable = { influence_array^4 = influence_array^5 }
				}
				AND = {
					check_variable = { influence_array^4 > 0 } #Checks to ensure its not empty
					check_variable = { influence_array^6 > 0 }
					check_variable = { influence_array^4 = influence_array^6 }
				}
			}
		}
		log = "[GetDateText]: [This.GetName]: Double Influencer is Present. Error Code: 10000"
		if = {
			limit = {
				check_variable = { influence_array^4 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^5 > 0 }
				check_variable = { influence_array^4 = influence_array^5 }
			}
			add_to_variable = { influence_array_val^4 = influence_array_val^5 }
			remove_from_array = { array = influence_array index = 5 }
			remove_from_array = { array = influence_array_val index = 5 }
			remove_from_array = { array = influence_array_calc index = 5 }
		}
		if = {
			limit = {
				check_variable = { influence_array^4 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^6 > 0 }
				check_variable = { influence_array^4 = influence_array^6 }
			}
			add_to_variable = { influence_array_val^4 = influence_array_val^6 }
			remove_from_array = { array = influence_array index = 6 }
			remove_from_array = { array = influence_array_val index = 6 }
			remove_from_array = { array = influence_array_calc index = 6 }
		}
	}
	if = {
		limit = {
			check_variable = { influence_array^5 > 0 } #Checks to ensure its not empty
			check_variable = { influence_array^6 > 0 } #Should skip if its not relevant
			check_variable = { influence_array^5 = influence_array^6 }
		}
		log = "[GetDateText]: [This.GetName]: Double Influencer is Present. Error Code: 10000"
		if = {
			limit = {
				check_variable = { influence_array^5 > 0 } #Checks to ensure its not empty
				check_variable = { influence_array^6 > 0 } #Should skip if its not relevant
				check_variable = { influence_array^5 = influence_array^6 }
			}
			add_to_variable = { influence_array_val^5 = influence_array_val^6 }
			remove_from_array = { array = influence_array index = 6 }
			remove_from_array = { array = influence_array_val index = 6 }
			remove_from_array = { array = influence_array_calc index = 6 }
		}
	}

	for_loop_effect = {
		end = influence_array^num
		value = v
		set_temp_variable = { temp_tag = 0 }
		add_to_temp_variable = { temp_tag = influence_array^v }
		if = {
			limit = {
				NOT = { country_exists = temp_var:temp_tag }
			}
			remove_from_array = {
				array = influence_array
				index = v
			}
			remove_from_array = {
				array = influence_array_val
				index = v
			}
			remove_from_array = {
				array = influence_array_calc
				index = v
			}
		}
	}
}

##GENERIC SCRIPTED DOMESTIC EFFECTS

##Boost Domestic Influence
boost_domestic_influence_1_percent = {
	custom_effect_tooltip = increase_domestic_influence_1_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total } #IT = 1000
		multiply_temp_variable = { influence_increase = 1.01 } #IT = 1040
		multiply_temp_variable = { influence_increase = 0.01 } #II = 41.6
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes
	}
}
boost_domestic_influence_2_percent = {
	custom_effect_tooltip = increase_domestic_influence_2_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.02 }
		multiply_temp_variable = { influence_increase = 0.02 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
boost_domestic_influence_3_percent = {
	custom_effect_tooltip = increase_domestic_influence_3_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.03 }
		multiply_temp_variable = { influence_increase = 0.03 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}

boost_domestic_influence_4_percent = {
	custom_effect_tooltip = increase_domestic_influence_4_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.04 }
		multiply_temp_variable = { influence_increase = 0.04 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
boost_domestic_influence_5_percent = {
	custom_effect_tooltip = increase_domestic_influence_5_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.05 }
		multiply_temp_variable = { influence_increase = 0.05 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}

boost_domestic_influence_6_percent = {
	custom_effect_tooltip = increase_domestic_influence_6_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.06 }
		multiply_temp_variable = { influence_increase = 0.06 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
boost_domestic_influence_7_percent = {
	custom_effect_tooltip = increase_domestic_influence_7_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.07 }
		multiply_temp_variable = { influence_increase = 0.07 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}

boost_domestic_influence_8_percent = {
	custom_effect_tooltip = increase_domestic_influence_8_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.08 }
		multiply_temp_variable = { influence_increase = 0.08 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
boost_domestic_influence_9_percent = {
	custom_effect_tooltip = increase_domestic_influence_9_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.09 }
		multiply_temp_variable = { influence_increase = 0.09 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
boost_domestic_influence_10_percent = {
	custom_effect_tooltip = increase_domestic_influence_10_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 1.10 }
		multiply_temp_variable = { influence_increase = 0.10 }
		round_temp_variable = influence_increase
		add_to_variable = { domestic_influence_amount = influence_increase }
		if = {
			limit = {
				check_variable = { influence_increase < 1 }
			}
			add_to_variable = { domestic_influence_amount = 20 }
		}
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}

##Reduce Domestic influence
decrease_domestic_influence_1_percent = {
	custom_effect_tooltip = decrease_domestic_influence_1_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.01 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_2_percent = {
	custom_effect_tooltip = decrease_domestic_influence_2_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.02 }
		round_temp_variable = influence_increase #2% Increase to Domestic support
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_3_percent = {
	custom_effect_tooltip = decrease_domestic_influence_3_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.03 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_4_percent = {
	custom_effect_tooltip = decrease_domestic_influence_4_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.04 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_5_percent = {
	custom_effect_tooltip = decrease_domestic_influence_5_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.05 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_6_percent = {
	custom_effect_tooltip = decrease_domestic_influence_6_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.06 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_7_percent = {
	custom_effect_tooltip = decrease_domestic_influence_7_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.07 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_8_percent = {
	custom_effect_tooltip = decrease_domestic_influence_8_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.08 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_9_percent = {
	custom_effect_tooltip = decrease_domestic_influence_9_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.09 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}
decrease_domestic_influence_10_percent = {
	custom_effect_tooltip = decrease_domestic_influence_10_percent_tt
	hidden_effect = {
		set_temp_variable = { influence_increase = influence_total }
		multiply_temp_variable = { influence_increase = 0.10 }
		round_temp_variable = influence_increase
		subtract_from_variable = { domestic_influence_amount = influence_increase }
		subtract_from_variable = { domestic_influence_amount = 5 }
		clamp_variable = { var = domestic_influence_amount min = 0 max = influence_total }
		recalculate_influence = yes

	}
}

##Add to Top Influencer
increase_biggest_influencer_by_1_percent = {
	custom_effect_tooltip = increase_biggest_influencer_by_1_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.01 }
	multiply_temp_variable = { influence_increase = 0.01 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^0 = influence_increase }
	add_to_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_biggest_influencer_by_2_percent = {
	custom_effect_tooltip = increase_biggest_influencer_by_2_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.02 }
	multiply_temp_variable = { influence_increase = 0.02 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^0 = influence_increase }
	add_to_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_biggest_influencer_by_3_percent = {
	custom_effect_tooltip = increase_biggest_influencer_by_3_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.03 }
	multiply_temp_variable = { influence_increase = 0.03 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^0 = influence_increase }
	add_to_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_biggest_influencer_by_4_percent = {
	custom_effect_tooltip = increase_biggest_influencer_by_4_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.04 }
	multiply_temp_variable = { influence_increase = 0.04 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^0 = influence_increase }
	add_to_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_biggest_influencer_by_5_percent = {
	custom_effect_tooltip = increase_biggest_influencer_by_5_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.05 }
	multiply_temp_variable = { influence_increase = 0.05 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^0 = influence_increase }
	add_to_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
##Reduction of Biggest Influencer
reduce_biggest_influencer_by_1_percent = {
	custom_effect_tooltip = attack_first_influence_1_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.01 }
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^0 = influence_reduce }
	subtract_from_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_biggest_influencer_by_2_percent = {
	custom_effect_tooltip = attack_first_influence_2_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.02 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^0 = influence_reduce }
	subtract_from_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_biggest_influencer_by_3_percent = {
	custom_effect_tooltip = attack_first_influence_3_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.03 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^0 = influence_reduce }
	subtract_from_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_biggest_influencer_by_4_percent = {
	custom_effect_tooltip = attack_first_influence_4_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.04 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^0 = influence_reduce }
	subtract_from_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_biggest_influencer_by_5_percent = {
	custom_effect_tooltip = attack_first_influence_5_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.05 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^0 = influence_reduce }
	subtract_from_variable = { influence_array_val^0 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}

#SECOND BIGGEST INFLUENCER
increase_second_influencer_by_1_percent = {
	custom_effect_tooltip = increase_second_influencer_by_1_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.01 }
	multiply_temp_variable = { influence_increase = 0.01 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^1 = influence_increase }
	add_to_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_second_influencer_by_2_percent = {
	custom_effect_tooltip = increase_second_influencer_by_2_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.02 }
	multiply_temp_variable = { influence_increase = 0.02 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^1 = influence_increase }
	add_to_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_second_influencer_by_3_percent = {
	custom_effect_tooltip = increase_second_influencer_by_3_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.03 }
	multiply_temp_variable = { influence_increase = 0.03 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^1 = influence_increase }
	add_to_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_second_influencer_by_4_percent = {
	custom_effect_tooltip = increase_second_influencer_by_4_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.04 }
	multiply_temp_variable = { influence_increase = 0.04 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^1 = influence_increase }
	add_to_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_second_influencer_by_5_percent = {
	custom_effect_tooltip = increase_second_influencer_by_5_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.05 }
	multiply_temp_variable = { influence_increase = 0.05 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^1 = influence_increase }
	add_to_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_second_influencer_by_1_percent = {
	custom_effect_tooltip = attack_second_influence_1_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.01 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^1 = influence_reduce }
	subtract_from_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_second_influencer_by_2_percent = {
	custom_effect_tooltip = attack_second_influence_2_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.02 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^1 = influence_reduce }
	subtract_from_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_second_influencer_by_3_percent = {
	custom_effect_tooltip = attack_second_influence_3_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.03 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^1 = influence_reduce }
	subtract_from_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_second_influencer_by_4_percent = {
	custom_effect_tooltip = attack_second_influence_4_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.04 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^1 = influence_reduce }
	subtract_from_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_second_influencer_by_5_percent = {
	custom_effect_tooltip = attack_second_influence_5_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.05 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^1 = influence_reduce }
	subtract_from_variable = { influence_array_val^1 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}

#THIRD BIGGEST INFLUENCER
increase_third_influencer_by_1_percent = {
	custom_effect_tooltip = increase_third_influencer_by_1_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.01 }
	multiply_temp_variable = { influence_increase = 0.01 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^2 = influence_increase }
	add_to_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_third_influencer_by_2_percent = {
	custom_effect_tooltip = increase_third_influencer_by_2_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.02 }
	multiply_temp_variable = { influence_increase = 0.02 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^2 = influence_increase }
	add_to_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_third_influencer_by_3_percent = {
	custom_effect_tooltip = increase_third_influencer_by_3_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.03 }
	multiply_temp_variable = { influence_increase = 0.03 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^2 = influence_increase }
	add_to_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_third_influencer_by_4_percent = {
	custom_effect_tooltip = increase_third_influencer_by_4_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.04 }
	multiply_temp_variable = { influence_increase = 0.04 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^2 = influence_increase }
	add_to_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
increase_third_influencer_by_5_percent = {
	custom_effect_tooltip = increase_third_influencer_by_5_percent_tt
	set_temp_variable = { influence_increase = influence_total }
	multiply_temp_variable = { influence_increase = 1.05 }
	multiply_temp_variable = { influence_increase = 0.05 }
	round_temp_variable = influence_increase
	add_to_variable = { influence_array_val^2 = influence_increase }
	add_to_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_third_influencer_by_1_percent = {
	custom_effect_tooltip = attack_third_influence_1_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.01 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^2 = influence_reduce }
	subtract_from_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_third_influencer_by_2_percent = {
	custom_effect_tooltip = attack_third_influence_2_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.02 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^2 = influence_reduce }
	subtract_from_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_third_influencer_by_3_percent = {
	custom_effect_tooltip = attack_third_influence_3_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.03 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^2 = influence_reduce }
	subtract_from_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_third_influencer_by_4_percent = {
	custom_effect_tooltip = attack_third_influence_4_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.04 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^2 = influence_reduce }
	subtract_from_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}
reduce_third_influencer_by_5_percent = {
	custom_effect_tooltip = attack_third_influence_5_amount_TT
	set_temp_variable = { influence_reduce = influence_total }
	multiply_temp_variable = { influence_reduce = 0.05 } #Reduce by 4%
	round_temp_variable = influence_reduce
	subtract_from_variable = { influence_array_val^2 = influence_reduce }
	subtract_from_variable = { influence_array_val^2 = 10 } #Hardcoded 10 point reduction
	#Safeguard: #Removes any influencer if below 1%
	recalculate_influence = yes

}

##General give influence of ROOT - ROOT being player country while THIS
generic_grant_1_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_1_percent_TT
}

generic_grant_2_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_2_percent_TT
}

generic_grant_3_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_5_percent_TT

}

generic_grant_6_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.06 }
	multiply_temp_variable = { influence_gain = 0.06 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_6_percent_TT

}

generic_grant_7_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.07 }
	multiply_temp_variable = { influence_gain = 0.07 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_7_percent_TT

}

generic_grant_8_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.08 }
	multiply_temp_variable = { influence_gain = 0.08 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_8_percent_TT

}

generic_grant_9_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.09 }
	multiply_temp_variable = { influence_gain = 0.09 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_9_percent_TT

}

generic_grant_10_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.1 }
	multiply_temp_variable = { influence_gain = 0.1 }
	multiply_temp_variable = { influence_gain = ROOT.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ROOT_influence_10_percent_TT

}

generic_lower_10_percent_influence_of_ROOT = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.10 } #10%
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ROOT }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ROOT.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ROOT_influence_10_percent_TT

}

##ADD to CURRENT SCOPE (This will add influence of the scope country to ROOT country)
generic_grant_1_percent_influence_of_CURRENT_SCOPE = {
	ROOT = {
		set_temp_variable = { influence_gain = influence_total }
		multiply_temp_variable = { influence_gain = 1.01 }
		multiply_temp_variable = { influence_gain = 0.01 }
		multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #from global rank idea
		round_temp_variable = influence_gain
		add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = PREV }
				}
				add_to_variable = { influence_array_val^v = influence_gain }
				set_country_flag = found
			}
		}
		if = {
			limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FROM.id }
			add_to_array = { influence_array_val = influence_gain }
		}
		clr_country_flag = found
		recalculate_influence = yes
	}

	custom_effect_tooltip = improve_CURRENT_SCOPE_influence_1_percent_TT

}
generic_grant_2_percent_influence_of_CURRENT_SCOPE = {
	ROOT = {
		set_temp_variable = { influence_gain = influence_total }
		multiply_temp_variable = { influence_gain = 1.02 }
		multiply_temp_variable = { influence_gain = 0.02 }
		multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #from global rank idea
		round_temp_variable = influence_gain
		add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = PREV }
				}
				add_to_variable = { influence_array_val^v = influence_gain }
				set_country_flag = found
			}
		}
		if = {
			limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FROM.id }
			add_to_array = { influence_array_val = influence_gain }
		}
		clr_country_flag = found
		recalculate_influence = yes
	}

	custom_effect_tooltip = improve_CURRENT_SCOPE_influence_2_percent_TT

}
generic_grant_3_percent_influence_of_CURRENT_SCOPE = {
	ROOT = {
		set_temp_variable = { influence_gain = influence_total }
		multiply_temp_variable = { influence_gain = 1.03 }
		multiply_temp_variable = { influence_gain = 0.03 }
		multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #from global rank idea
		round_temp_variable = influence_gain
		add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = PREV }
				}
				add_to_variable = { influence_array_val^v = influence_gain }
				set_country_flag = found
			}
		}
		if = {
			limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FROM.id }
			add_to_array = { influence_array_val = influence_gain }
		}
		clr_country_flag = found
		recalculate_influence = yes
	}

	custom_effect_tooltip = improve_CURRENT_SCOPE_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_CURRENT_SCOPE = {
	ROOT = {
		set_temp_variable = { influence_gain = influence_total }
		multiply_temp_variable = { influence_gain = 1.04 }
		multiply_temp_variable = { influence_gain = 0.04 }
		multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #from global rank idea
		round_temp_variable = influence_gain
		add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = PREV }
				}
				add_to_variable = { influence_array_val^v = influence_gain }
				set_country_flag = found
			}
		}
		if = {
			limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FROM.id }
			add_to_array = { influence_array_val = influence_gain }
		}
		clr_country_flag = found
		recalculate_influence = yes
	}

	custom_effect_tooltip = improve_CURRENT_SCOPE_influence_4_percent_TT

}
generic_grant_5_percent_influence_of_CURRENT_SCOPE = {
	ROOT = {
		set_temp_variable = { influence_gain = influence_total }
		multiply_temp_variable = { influence_gain = 1.05 }
		multiply_temp_variable = { influence_gain = 0.05 }
		multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #from global rank idea
		round_temp_variable = influence_gain
		add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = PREV }
				}
				add_to_variable = { influence_array_val^v = influence_gain }
				set_country_flag = found
			}
		}
		if = {
			limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FROM.id }
			add_to_array = { influence_array_val = influence_gain }
		}
		clr_country_flag = found
		recalculate_influence = yes
	}

	custom_effect_tooltip = improve_CURRENT_SCOPE_influence_5_percent_TT

}

##ADD to FROM
generic_grant_1_percent_influence_of_FROM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = FROM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FROM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FROM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FROM_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_FROM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = FROM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FROM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FROM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FROM_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_FROM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = FROM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FROM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FROM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FROM_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_FROM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = FROM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FROM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FROM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FROM_influence_4_percent_TT
}

generic_grant_5_percent_influence_of_FROM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = FROM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FROM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FROM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FROM_influence_5_percent_TT

}

generic_grant_1_percent_influence_of_PREV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #PREV global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PREV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PREV_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_PREV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #PREV global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PREV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PREV_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_PREV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #PREV global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PREV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PREV_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_PREV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #PREV global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PREV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PREV_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_PREV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = PREV.influence_multiplier } #PREV global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PREV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PREV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PREV_influence_5_percent_TT

}

###DO NOT USE IF YOU WANT TO ADD TO THESE COUNTRIES: These are used for fringe cases like in the Nigerian tree where a focus gives American influence in Nigeria
#Tag Specific - USA
#USA GAIN
generic_grant_1_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = USA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_USA_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = USA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_USA_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = USA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_USA_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = USA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_USA_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = USA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_USA_influence_5_percent_TT

}

##LOWER USA
generic_lower_1_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.01 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_USA_influence_1_percent_TT
}


generic_lower_2_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_USA_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_USA_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_USA_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_USA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = USA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = USA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_USA_influence_5_percent_TT
}
#Tag Specific - CHI

generic_grant_1_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = CHI.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CHI_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = CHI.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CHI_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = CHI.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CHI_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = CHI.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CHI_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = CHI.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CHI_influence_5_percent_TT

}

##LOWER CHI
generic_lower_1_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.01 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CHI_influence_1_percent_TT
}


generic_lower_2_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CHI_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CHI_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CHI_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_CHI = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CHI }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CHI.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CHI_influence_5_percent_TT
}
#Tag Specific - RAJ
#GAIN RAJ
generic_grant_1_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = RAJ.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_RAJ_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = RAJ.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_RAJ_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = RAJ.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_RAJ_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = RAJ.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_RAJ_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = RAJ.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_RAJ_influence_5_percent_TT

}

##LOWER RAJ
generic_lower_1_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.01 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_RAJ_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_RAJ_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_RAJ_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_RAJ_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_RAJ = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = RAJ }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = RAJ.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_RAJ_influence_5_percent_TT
}
#Tag Specific - GER
#GAIN GER
generic_grant_1_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = GER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GER_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = GER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GER_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = GER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GER_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = GER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GER_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = GER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GER_influence_5_percent_TT

}

##LOWER GER
generic_lower_1_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.01 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GER_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GER_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GER_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GER_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_GER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GER_influence_5_percent_TT
}
#Tag Specific - FRA
#GAIN FRA
generic_grant_1_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = FRA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FRA_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = FRA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FRA_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = FRA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FRA_influence_3_percent_TT

}

generic_grant_4_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.04 }
	multiply_temp_variable = { influence_gain = 0.04 }
	multiply_temp_variable = { influence_gain = FRA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FRA_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = FRA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions by 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FRA_influence_5_percent_TT

}

##LOWER FRA
generic_lower_1_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.01 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_FRA_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_FRA_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_FRA_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_FRA_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_FRA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FRA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FRA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_FRA_influence_5_percent_TT
}

#Tag Specific - SOV
#Grant SOV influence
generic_grant_1_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = SOV.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SOV.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SOV_influence_1_percent_TT

}
generic_grant_2_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = SOV.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SOV.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SOV_influence_2_percent_TT

}
generic_grant_3_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = SOV.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SOV.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SOV_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = SOV.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SOV.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SOV_influence_4_percent_TT

}
generic_grant_5_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = SOV.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SOV.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SOV_influence_5_percent_TT

}

generic_lower_1_percent_influence_of_SOV = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SOV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SOV_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SOV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SOV_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SOV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SOV_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SOV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SOV_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_SOV = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SOV }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SOV.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SOV_influence_5_percent_TT
}

#Tag Specific - ENG
#Grant ENG influence
generic_grant_1_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = ENG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ENG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ENG_influence_1_percent_TT

}
generic_grant_2_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = ENG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ENG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ENG_influence_2_percent_TT

}
generic_grant_3_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = ENG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ENG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ENG_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = ENG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ENG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ENG_influence_4_percent_TT

}
generic_grant_5_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = ENG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ENG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ENG_influence_5_percent_TT

}

generic_lower_1_percent_influence_of_ENG = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ENG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ENG_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ENG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ENG_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ENG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ENG_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ENG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ENG_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_ENG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ENG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ENG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ENG_influence_5_percent_TT
}

#Tag Specific - PER
generic_grant_1_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = PER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = PER.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PER_influence_1_percent_TT

}
generic_grant_2_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = PER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = PER.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PER_influence_2_percent_TT

}
generic_grant_3_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = PER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = PER.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PER_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = PER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = PER.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PER_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = PER.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = PER.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_PER_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_PER = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_PER_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_PER_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_PER_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_PER_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_PER = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = PER }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = PER.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_PER_influence_5_percent_TT
}
#Tag Specific - SAU
generic_grant_1_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = SAU.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SAU.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SAU_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = SAU.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SAU.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SAU_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = SAU.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SAU.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SAU_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = SAU.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SAU.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SAU_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = SAU.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = SAU.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_SAU_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_SAU = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SAU.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SAU_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SAU.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SAU_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SAU.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SAU_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SAU.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SAU_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_SAU = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = SAU }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = SAU.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_SAU_influence_5_percent_TT
}
#Tag Specific - NIG
generic_grant_1_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = NIG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = NIG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_NIG_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = NIG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = NIG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_NIG_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = NIG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = NIG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_NIG_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = NIG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = NIG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_NIG_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = NIG.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = NIG.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_NIG_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_NIG = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = NIG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_NIG_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = NIG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_NIG_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = NIG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_NIG_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = NIG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_NIG_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_NIG = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = NIG }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = NIG.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_NIG_influence_5_percent_TT
}
#Tag Specific - CAN
generic_grant_1_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = CAN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = CAN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CAN_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = CAN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = CAN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CAN_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = CAN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = CAN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CAN_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = CAN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = CAN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CAN_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = CAN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = CAN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_CAN_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_CAN = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CAN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CAN_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CAN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CAN_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CAN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CAN_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CAN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CAN_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_CAN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = CAN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = CAN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_CAN_influence_5_percent_TT
}
#Tag Specific - JAP
generic_grant_1_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = JAP.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = JAP.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_JAP_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = JAP.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = JAP.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_JAP_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = JAP.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = JAP.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_JAP_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = JAP.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = JAP.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_JAP_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = JAP.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = JAP.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_JAP_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_JAP = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = JAP.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_JAP_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = JAP.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_JAP_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = JAP.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_JAP_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = JAP.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_JAP_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_JAP = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = JAP }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = JAP.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_JAP_influence_5_percent_TT
}
#Tag Specific - ITA
generic_grant_1_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = ITA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ITA.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ITA_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = ITA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ITA.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ITA_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = ITA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ITA.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ITA_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = ITA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ITA.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ITA_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = ITA.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = ITA.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_ITA_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_ITA = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ITA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ITA_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ITA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ITA_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ITA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ITA_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ITA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ITA_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_ITA = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = ITA }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = ITA.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_ITA_influence_5_percent_TT
}
#Tag Specific - MEX
generic_grant_1_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = MEX.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = MEX.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_MEX_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = MEX.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = MEX.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_MEX_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = MEX.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = MEX.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_MEX_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = MEX.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = MEX.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_MEX_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = MEX.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = MEX.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_MEX_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_MEX = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = MEX.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_MEX_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = MEX.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_MEX_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = MEX.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_MEX_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = MEX.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_MEX_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_MEX = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = MEX }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = MEX.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_MEX_influence_5_percent_TT
}
#Tag Specific - GRE
generic_grant_1_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = GRE.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = GRE.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GRE_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = GRE.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = GRE.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GRE_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = GRE.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = GRE.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GRE_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = GRE.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = GRE.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GRE_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = GRE.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = GRE.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_GRE_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_GRE = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GRE.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GRE_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GRE.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GRE_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GRE.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GRE_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GRE.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GRE_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_GRE = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = GRE }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = GRE.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_GRE_influence_5_percent_TT
}
#Tag Specific - BRM
generic_grant_1_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = BRM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = BRM.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_BRM_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = BRM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = BRM.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_BRM_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = BRM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = BRM.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_BRM_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = BRM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = BRM.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_BRM_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = BRM.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = BRM.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_BRM_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_BRM = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = BRM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_BRM_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = BRM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_BRM_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = BRM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_BRM_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = BRM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_BRM_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_BRM = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = BRM }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = BRM.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_BRM_influence_5_percent_TT
}
#Tag Specific - KOR
generic_grant_1_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = KOR.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = KOR.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_KOR_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = KOR.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = KOR.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_KOR_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = KOR.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = KOR.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_KOR_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = KOR.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = KOR.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_KOR_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = KOR.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = KOR.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_KOR_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_KOR = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = KOR.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_KOR_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = KOR.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_KOR_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = KOR.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_KOR_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = KOR.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_KOR_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_KOR = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = KOR }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = KOR.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = decrease_KOR_influence_5_percent_TT
}
#Tag Specific - FIN
generic_grant_1_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.01 }
	multiply_temp_variable = { influence_gain = 0.01 }
	multiply_temp_variable = { influence_gain = FIN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FIN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FIN_influence_1_percent_TT

}

generic_grant_2_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.02 }
	multiply_temp_variable = { influence_gain = 0.02 }
	multiply_temp_variable = { influence_gain = FIN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FIN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FIN_influence_2_percent_TT

}

generic_grant_3_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.03 }
	multiply_temp_variable = { influence_gain = 0.03 }
	multiply_temp_variable = { influence_gain = FIN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FIN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FIN_influence_3_percent_TT

}
generic_grant_4_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 } #2%
	multiply_temp_variable = { influence_gain = FIN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FIN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FIN_influence_4_percent_TT

}

generic_grant_5_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 1.05 }
	multiply_temp_variable = { influence_gain = 0.05 }
	multiply_temp_variable = { influence_gain = FIN.influence_multiplier } #from global rank idea
	round_temp_variable = influence_gain
	add_to_temp_variable = { influence_gain = 10 } #10 Debugging value to prevent additions of 0
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = FIN.id }
			add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes

	custom_effect_tooltip = improve_FIN_influence_5_percent_TT

}
generic_lower_1_percent_influence_of_FIN = { #These might cause some issues if the nation no longer has influence
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FIN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes
	custom_effect_tooltip = decrease_FIN_influence_1_percent_TT
}

generic_lower_2_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.02 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FIN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes
	custom_effect_tooltip = decrease_FIN_influence_2_percent_TT
}

generic_lower_3_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.03 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FIN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes
	custom_effect_tooltip = decrease_FIN_influence_3_percent_TT
}

generic_lower_4_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.04 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FIN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes
	custom_effect_tooltip = decrease_FIN_influence_4_percent_TT
}

generic_lower_5_percent_influence_of_FIN = {
	set_temp_variable = { influence_gain = influence_total }
	multiply_temp_variable = { influence_gain = 0.05 }
	#Flip to Reduce - vice versa
	multiply_temp_variable = { influence_gain = -1 }
	round_temp_variable = influence_gain
	for_loop_effect = {
		end = influence_array^num
		value = v
		if = {
			limit = {
				check_variable = { influence_array^v = FIN }
			}
			add_to_variable = { influence_array_val^v = influence_gain }
			set_country_flag = found
		}
	}
	if = {
		limit = { NOT = { has_country_flag = found } }
		add_to_array = { influence_array = FIN.id }
		add_to_array = { influence_array_val = influence_gain }
	}
	clr_country_flag = found
	recalculate_influence = yes
	custom_effect_tooltip = decrease_FIN_influence_5_percent_TT
}
